name: Release Android APK and Desktop apps

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  android:
    name: Android (Gradle)
    runs-on: ubuntu-latest
    env:
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'
      - uses: android-actions/setup-android@v3
      - name: Ensure Gradle wrapper is executable
        run: chmod +x ./gradlew
      - name: Install Android SDK components
        run: |
          yes | sdkmanager --licenses
          yes | sdkmanager "platform-tools" "platforms;android-36" "build-tools;35.0.0"
      - name: Restore keystore (if provided)
        if: env.ANDROID_KEYSTORE_BASE64 != ''
        run: echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > my-release-key.jks
      - name: Build release APK
        run: |
          echo "::group::Gradle version"; ./gradlew --version; echo "::endgroup::"
          export ANDROID_KEYSTORE_PATH=$GITHUB_WORKSPACE/my-release-key.jks
          export ANDROID_KEY_ALIAS=${ANDROID_KEY_ALIAS}
          export ANDROID_KEY_PASSWORD=${ANDROID_KEY_PASSWORD}
          export ANDROID_STORE_PASSWORD=${ANDROID_STORE_PASSWORD}
          export SKIP_RELEASE_SIGNING=false
          ./gradlew :app:assembleRelease :app:bundleRelease --stacktrace
      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab
      - name: Attach APK to GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  desktop:
    name: Desktop (Nativefier)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Nativefier
        run: npm i -g nativefier
      - name: Build
        shell: bash
        run: |
          set -euxo pipefail
          APP_URL="https://${GITHUB_REPOSITORY_OWNER}.github.io/${GITHUB_REPOSITORY#*/}/"
          OUT_DIR="dist-desktop"
          mkdir -p "$OUT_DIR"
          nativefier "$APP_URL" --name "GlobGram" --internal-urls ".*" --disable-dev-tools --single-instance --out "$OUT_DIR"
          ls -la "$OUT_DIR" || true
      - name: Upload Desktop artifact
        uses: actions/upload-artifact@v4
        with:
          name: desktop-${{ runner.os }}
          path: dist-desktop/**
      - name: Attach to GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: dist-desktop/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
